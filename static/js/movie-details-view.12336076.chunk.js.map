{"version":3,"file":"static/js/movie-details-view.12336076.chunk.js","mappings":"sSAAMA,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,IAIxD,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,oBAC8Bb,EAD9B,oBAKxB,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,yDAAD,OACuBD,EADvB,iCACuDiB,EADvD,kC,kHCjC/B,EAAkC,0CAAlC,EAA8F,0CAA9F,EAAiJ,iCAAjJ,EAA6L,mC,SCUvLC,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,+BAEIC,GAASD,EAAAA,EAAAA,OAAK,kBAClB,gCAGa,SAASE,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACAT,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BY,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BlB,GAASmB,KAAKL,KACxC,CAACd,IAGFa,IACE,iCACE,mBACEO,UAAWC,EACXC,QAAS,WACP,IAAMC,EAAYC,OAAOC,eAAeC,QAAQ,aAChDX,EAAQ,OAACQ,QAAD,IAACA,EAAAA,EAAa,MAJ1B,6BASA,iBAAKH,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXM,IAvBW,kCAuBWd,EAAMe,YAC5BC,IAAKhB,EAAMiB,WAGf,4BACE,wBAAKjB,EAAMiB,SACX,wCAAgBjB,EAAMkB,iBACtB,sCACA,uBAAIlB,EAAMmB,YACV,oCACA,uBAAInB,EAAMoB,OAAOC,KAAI,qBAAGC,QAAiBC,KAAK,eAGlD,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAI5B,EAAS6B,MAAM,KAAKC,MAAM,EAAG,GAAGH,KAAK,KAAO,QAAzD,qBAIF,yBACE,SAAC,KAAD,CACEC,GAAI5B,EAAS6B,MAAM,KAAKC,MAAM,EAAG,GAAGH,KAAK,KAAO,WADlD,8BAQN,mBACA,SAAC,EAAAI,SAAD,CAAUC,UAAU,6CAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACtC,EAAD,OAC5B,SAAC,KAAD,CAAOqC,KAAK,UAAUC,SAAS,SAACpC,EAAD","sources":["API/API.js","webpack://react-homework-template/./src/pages/MoviesDetailsView/MovieDetailsView.module.css?fd9c","pages/MoviesDetailsView/MoviesDetailsView.js"],"sourcesContent":["const API_KEY = '144759315794452de88e97e5f388b34e';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MovieDetailsView_movie_container__46P73\",\"photo_container\":\"MovieDetailsView_photo_container__zP4OP\",\"poster\":\"MovieDetailsView_poster__4o6ze\",\"back_btn\":\"MovieDetailsView_back_btn__qBLFU\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport * as movieApi from '../../API/API';\nimport s from './MovieDetailsView.module.css';\nconst Cast = lazy(() =>\n  import('../Cast/Cast' /* webpackChunkName: \"cast-view\" */)\n);\nconst Review = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: \"review-view\" */)\n);\n\nexport default function MovieDetailsView() {\n  const { pathname } = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    movieApi.fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    movie && (\n      <>\n        <button\n          className={s.back_btn}\n          onClick={() => {\n            const prevRoute = window.sessionStorage.getItem('prevRoute');\n            navigate(prevRoute ?? '/');\n          }}\n        >\n          &#8592; Go back\n        </button>\n        <div className={s.movie_container}>\n          <div className={s.photo_container}>\n            <img\n              className={s.poster}\n              src={BASE_IMAGE_URL + movie.poster_path}\n              alt={movie.title}\n            />\n          </div>\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User score: {movie.vote_average}</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n          </div>\n        </div>\n        <hr />\n        <div>\n          <p>Additional information:</p>\n          <ul>\n            <li>\n              <NavLink to={pathname.split('/').slice(0, 3).join('/') + '/cast'}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={pathname.split('/').slice(0, 3).join('/') + '/reviews'}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <hr />\n        <Suspense fallback={<>loading...</>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Review />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n}\n"],"names":["API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","Cast","lazy","Review","MovieDetailsView","pathname","useLocation","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","movieApi","then","className","s","onClick","prevRoute","window","sessionStorage","getItem","src","poster_path","alt","title","vote_average","overview","genres","map","name","join","to","split","slice","Suspense","fallback","path","element"],"sourceRoot":""}