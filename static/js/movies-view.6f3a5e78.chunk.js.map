{"version":3,"file":"static/js/movies-view.6f3a5e78.chunk.js","mappings":"sSAAMA,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,IAIxD,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,oBAC8Bb,EAD9B,oBAKxB,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,yDAAD,OACuBD,EADvB,iCACuDiB,EADvD,kC,iECjC/B,EAA+B,qCAA/B,EAAmF,qC,SCGpE,SAASC,EAAeC,GACrC,OACEA,IACE,wBACGA,EAAKA,KAAKC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACpB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAASD,UAAWC,EAAgBC,GAAE,kBAAaJ,GAAnD,SACGC,KAF+BD,U,kHCThD,EAA4B,8B,SCKb,SAASK,IAAc,IAAD,EACnC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAEdC,EAAc,MAEY,WAC5B,IAAMC,EAAYC,OAAOC,eAAeC,QAAQ,aAC5CH,EAAUI,SAAS,YACrBL,EAAcC,EAAUK,MAAM,KAIlCC,IAEAC,EAAAA,EAAAA,YAAU,WACR,IAAM1B,EAAQiB,EAAOO,MAAM,GACtBxB,IAGLD,EAAAA,EAAAA,IAAiBC,GAAO2B,KAAKf,KAC5B,CAACK,IAYJ,OACE,iCACE,kBAAMW,SAZW,SAAAC,GACnBA,EAAEC,iBACF,IAAM9B,EAAQ6B,EAAEE,cAAcC,SAAShC,MAAMiC,MAAMC,OAC9ClC,IAGLa,EAAS,GAAD,OAAIG,EAAJ,mBAAuBhB,IAC/BoB,OAAOC,eAAec,QAAQ,YAA9B,UAA8CnB,EAA9C,mBAAiEhB,MAK/D,WACE,kBACEoC,KAAK,QACLC,aAAY,UAAEnB,SAAF,QAAiB,GAC7BoB,KAAK,UAEP,kBAAOhC,UAAWC,EAAa+B,KAAK,SAASL,MAAM,cAEpDtB,IAAU,SAACV,EAAA,EAAD,CAAgBC,KAAMS,EAAO4B","sources":["API/API.js","webpack://react-homework-template/./src/components/MoviesLinkList/MoviesLinkList.module.css?6ad3","components/MoviesLinkList/MoviesLinkList.jsx","webpack://react-homework-template/./src/pages/MoviesView/MoviesView.module.css?fce4","pages/MoviesView/MoviesView.jsx"],"sourcesContent":["const API_KEY = '144759315794452de88e97e5f388b34e';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movies__link\":\"MoviesLinkList_movies__link__QqApb\",\"movies__item\":\"MoviesLinkList_movies__item__lD0Lg\"};","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MoviesLinkList.module.css';\n\nexport default function MoviesLinkList(data) {\n  return (\n    data && (\n      <ul>\n        {data.data.map(({ id, original_title }) => {\n          return (\n            <li className={s.movies__item} key={id}>\n              <NavLink className={s.movies__link} to={`/movies/${id}`}>\n                {original_title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nMoviesLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__btn\":\"MoviesView_form__btn__Zuk9e\"};","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../API/API';\nimport MoviesLinkList from '../../components/MoviesLinkList/MoviesLinkList';\nimport s from './MoviesView.module.css';\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState(null);\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n\n  let searchQuery = null;\n\n  const setSearchQueryToValue = () => {\n    const prevRoute = window.sessionStorage.getItem('prevRoute');\n    if (prevRoute.includes('search')) {\n      searchQuery = prevRoute.slice(15);\n    }\n  };\n\n  setSearchQueryToValue();\n\n  useEffect(() => {\n    const query = search.slice(8);\n    if (!query) {\n      return;\n    }\n    fetchSearchMovie(query).then(setMovies);\n  }, [search]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.query.value.trim();\n    if (!query) {\n      return;\n    }\n    navigate(`${pathname}?search=${query}`);\n    window.sessionStorage.setItem('prevRoute', `${pathname}?search=${query}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"query\"\n          defaultValue={searchQuery ?? ''}\n          type=\"text\"\n        ></input>\n        <input className={s.form__btn} type=\"submit\" value=\"Search\" />\n      </form>\n      {movies && <MoviesLinkList data={movies.results} />}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","MoviesLinkList","data","map","id","original_title","className","s","to","MoviesView","useState","movies","setMovies","navigate","useNavigate","useLocation","pathname","search","searchQuery","prevRoute","window","sessionStorage","getItem","includes","slice","setSearchQueryToValue","useEffect","then","onSubmit","e","preventDefault","currentTarget","elements","value","trim","setItem","name","defaultValue","type","results"],"sourceRoot":""}